export const CUSTOM_URI = "https://2019.summerofcode.be/unshacled#";

export const TERM = {
  AbstractResult: `${CUSTOM_URI}AbstractResult`,
  AndConstraintComponent: `${CUSTOM_URI}AndConstraintComponent`,
  "AndConstraintComponent-and": `${CUSTOM_URI}AndConstraintComponent-and`,
  BlankNode: `${CUSTOM_URI}BlankNode`,
  BlankNodeOrIRI: `${CUSTOM_URI}BlankNodeOrIRI`,
  BlankNodeOrLiteral: `${CUSTOM_URI}BlankNodeOrLiteral`,
  ClassConstraintComponent: `${CUSTOM_URI}ClassConstraintComponent`,
  "ClassConstraintComponent-class": `${CUSTOM_URI}ClassConstraintComponent-class`,
  ClosedConstraintComponent: `${CUSTOM_URI}ClosedConstraintComponent`,
  "ClosedConstraintComponent-closed": `${CUSTOM_URI}ClosedConstraintComponent-closed`,
  "ClosedConstraintComponent-ignoredProperties": `${CUSTOM_URI}ClosedConstraintComponent-ignoredProperties`,
  ConstraintComponent: `${CUSTOM_URI}ConstraintComponent`,
  DatatypeConstraintComponent: `${CUSTOM_URI}DatatypeConstraintComponent`,
  "DatatypeConstraintComponent-datatype": `${CUSTOM_URI}DatatypeConstraintComponent-datatype`,
  DisjointConstraintComponent: `${CUSTOM_URI}DisjointConstraintComponent`,
  "DisjointConstraintComponent-disjoint": `${CUSTOM_URI}DisjointConstraintComponent-disjoint`,
  EqualsConstraintComponent: `${CUSTOM_URI}EqualsConstraintComponent`,
  "EqualsConstraintComponent-equals": `${CUSTOM_URI}EqualsConstraintComponent-equals`,
  ExpressionConstraintComponent: `${CUSTOM_URI}ExpressionConstraintComponent`,
  "ExpressionConstraintComponent-expression": `${CUSTOM_URI}ExpressionConstraintComponent-expression`,
  Function: `${CUSTOM_URI}Function`,
  HasValueConstraintComponent: `${CUSTOM_URI}HasValueConstraintComponent`,
  "HasValueConstraintComponent-hasValue": `${CUSTOM_URI}HasValueConstraintComponent-hasValue`,
  IRI: `${CUSTOM_URI}IRI`,
  IRIOrLiteral: `${CUSTOM_URI}IRIOrLiteral`,
  InConstraintComponent: `${CUSTOM_URI}InConstraintComponent`,
  "InConstraintComponent-in": `${CUSTOM_URI}InConstraintComponent-in`,
  Info: `${CUSTOM_URI}Info`,
  JSConstraint: `${CUSTOM_URI}JSConstraint`,
  "JSConstraint-js": `${CUSTOM_URI}JSConstraint-js`,
  JSConstraintComponent: `${CUSTOM_URI}JSConstraintComponent`,
  JSExecutable: `${CUSTOM_URI}JSExecutable`,
  JSFunction: `${CUSTOM_URI}JSFunction`,
  JSLibrary: `${CUSTOM_URI}JSLibrary`,
  JSRule: `${CUSTOM_URI}JSRule`,
  JSTarget: `${CUSTOM_URI}JSTarget`,
  JSTargetType: `${CUSTOM_URI}JSTargetType`,
  JSValidator: `${CUSTOM_URI}JSValidator`,
  LanguageInConstraintComponent: `${CUSTOM_URI}LanguageInConstraintComponent`,
  "LanguageInConstraintComponent-languageIn": `${CUSTOM_URI}LanguageInConstraintComponent-languageIn`,
  LessThanConstraintComponent: `${CUSTOM_URI}LessThanConstraintComponent`,
  "LessThanConstraintComponent-lessThan": `${CUSTOM_URI}LessThanConstraintComponent-lessThan`,
  LessThanOrEqualsConstraintComponent: `${CUSTOM_URI}LessThanOrEqualsConstraintComponent`,
  "LessThanOrEqualsConstraintComponent-lessThanOrEquals": `${CUSTOM_URI}LessThanOrEqualsConstraintComponent-lessThanOrEquals`,
  Literal: `${CUSTOM_URI}Literal`,
  MaxCountConstraintComponent: `${CUSTOM_URI}MaxCountConstraintComponent`,
  "MaxCountConstraintComponent-maxCount": `${CUSTOM_URI}MaxCountConstraintComponent-maxCount`,
  MaxExclusiveConstraintComponent: `${CUSTOM_URI}MaxExclusiveConstraintComponent`,
  "MaxExclusiveConstraintComponent-maxExclusive": `${CUSTOM_URI}MaxExclusiveConstraintComponent-maxExclusive`,
  MaxInclusiveConstraintComponent: `${CUSTOM_URI}MaxInclusiveConstraintComponent`,
  "MaxInclusiveConstraintComponent-maxInclusive": `${CUSTOM_URI}MaxInclusiveConstraintComponent-maxInclusive`,
  MaxLengthConstraintComponent: `${CUSTOM_URI}MaxLengthConstraintComponent`,
  "MaxLengthConstraintComponent-maxLength": `${CUSTOM_URI}MaxLengthConstraintComponent-maxLength`,
  MinCountConstraintComponent: `${CUSTOM_URI}MinCountConstraintComponent`,
  "MinCountConstraintComponent-minCount": `${CUSTOM_URI}MinCountConstraintComponent-minCount`,
  MinExclusiveConstraintComponent: `${CUSTOM_URI}MinExclusiveConstraintComponent`,
  "MinExclusiveConstraintComponent-minExclusive": `${CUSTOM_URI}MinExclusiveConstraintComponent-minExclusive`,
  MinInclusiveConstraintComponent: `${CUSTOM_URI}MinInclusiveConstraintComponent`,
  "MinInclusiveConstraintComponent-minInclusive": `${CUSTOM_URI}MinInclusiveConstraintComponent-minInclusive`,
  MinLengthConstraintComponent: `${CUSTOM_URI}MinLengthConstraintComponent`,
  "MinLengthConstraintComponent-minLength": `${CUSTOM_URI}MinLengthConstraintComponent-minLength`,
  NodeConstraintComponent: `${CUSTOM_URI}NodeConstraintComponent`,
  "NodeConstraintComponent-node": `${CUSTOM_URI}NodeConstraintComponent-node`,
  NodeKind: `${CUSTOM_URI}NodeKind`,
  NodeKindConstraintComponent: `${CUSTOM_URI}NodeKindConstraintComponent`,
  "NodeKindConstraintComponent-nodeKind": `${CUSTOM_URI}NodeKindConstraintComponent-nodeKind`,
  NodeShape: `${CUSTOM_URI}NodeShape`,
  NotConstraintComponent: `${CUSTOM_URI}NotConstraintComponent`,
  "NotConstraintComponent-not": `${CUSTOM_URI}NotConstraintComponent-not`,
  OrConstraintComponent: `${CUSTOM_URI}OrConstraintComponent`,
  "OrConstraintComponent-or": `${CUSTOM_URI}OrConstraintComponent-or`,
  Parameter: `${CUSTOM_URI}Parameter`,
  Parameterizable: `${CUSTOM_URI}Parameterizable`,
  PatternConstraintComponent: `${CUSTOM_URI}PatternConstraintComponent`,
  "PatternConstraintComponent-flags": `${CUSTOM_URI}PatternConstraintComponent-flags`,
  "PatternConstraintComponent-pattern": `${CUSTOM_URI}PatternConstraintComponent-pattern`,
  PrefixDeclaration: `${CUSTOM_URI}PrefixDeclaration`,
  PropertyConstraintComponent: `${CUSTOM_URI}PropertyConstraintComponent`,
  "PropertyConstraintComponent-property": `${CUSTOM_URI}PropertyConstraintComponent-property`,
  PropertyGroup: `${CUSTOM_URI}PropertyGroup`,
  PropertyShape: `${CUSTOM_URI}PropertyShape`,
  QualifiedMaxCountConstraintComponent: `${CUSTOM_URI}QualifiedMaxCountConstraintComponent`,
  "QualifiedMaxCountConstraintComponent-qualifiedMaxCount": `${CUSTOM_URI}QualifiedMaxCountConstraintComponent-qualifiedMaxCount`,
  "QualifiedMaxCountConstraintComponent-qualifiedValueShape": `${CUSTOM_URI}QualifiedMaxCountConstraintComponent-qualifiedValueShape`,
  "QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint": `${CUSTOM_URI}QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint`,
  QualifiedMinCountConstraintComponent: `${CUSTOM_URI}QualifiedMinCountConstraintComponent`,
  "QualifiedMinCountConstraintComponent-qualifiedMinCount": `${CUSTOM_URI}QualifiedMinCountConstraintComponent-qualifiedMinCount`,
  "QualifiedMinCountConstraintComponent-qualifiedValueShape": `${CUSTOM_URI}QualifiedMinCountConstraintComponent-qualifiedValueShape`,
  "QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint": `${CUSTOM_URI}QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint`,
  ResultAnnotation: `${CUSTOM_URI}ResultAnnotation`,
  Rule: `${CUSTOM_URI}Rule`,
  SPARQLAskExecutable: `${CUSTOM_URI}SPARQLAskExecutable`,
  SPARQLAskValidator: `${CUSTOM_URI}SPARQLAskValidator`,
  SPARQLConstraint: `${CUSTOM_URI}SPARQLConstraint`,
  SPARQLConstraintComponent: `${CUSTOM_URI}SPARQLConstraintComponent`,
  "SPARQLConstraintComponent-sparql": `${CUSTOM_URI}SPARQLConstraintComponent-sparql`,
  SPARQLConstructExecutable: `${CUSTOM_URI}SPARQLConstructExecutable`,
  SPARQLExecutable: `${CUSTOM_URI}SPARQLExecutable`,
  SPARQLFunction: `${CUSTOM_URI}SPARQLFunction`,
  SPARQLRule: `${CUSTOM_URI}SPARQLRule`,
  SPARQLSelectExecutable: `${CUSTOM_URI}SPARQLSelectExecutable`,
  SPARQLSelectValidator: `${CUSTOM_URI}SPARQLSelectValidator`,
  SPARQLTarget: `${CUSTOM_URI}SPARQLTarget`,
  SPARQLTargetType: `${CUSTOM_URI}SPARQLTargetType`,
  SPARQLUpdateExecutable: `${CUSTOM_URI}SPARQLUpdateExecutable`,
  Severity: `${CUSTOM_URI}Severity`,
  Shape: `${CUSTOM_URI}Shape`,
  Target: `${CUSTOM_URI}Target`,
  TargetType: `${CUSTOM_URI}TargetType`,
  TripleRule: `${CUSTOM_URI}TripleRule`,
  UniqueLangConstraintComponent: `${CUSTOM_URI}UniqueLangConstraintComponent`,
  "UniqueLangConstraintComponent-uniqueLang": `${CUSTOM_URI}UniqueLangConstraintComponent-uniqueLang`,
  ValidationReport: `${CUSTOM_URI}ValidationReport`,
  ValidationResult: `${CUSTOM_URI}ValidationResult`,
  Validator: `${CUSTOM_URI}Validator`,
  Violation: `${CUSTOM_URI}Violation`,
  Warning: `${CUSTOM_URI}Warning`,
  XoneConstraintComponent: `${CUSTOM_URI}XoneConstraintComponent`,
  "XoneConstraintComponent-xone": `${CUSTOM_URI}XoneConstraintComponent-xone`,
  alternativePath: `${CUSTOM_URI}alternativePath`,
  and: `${CUSTOM_URI}and`,
  annotationProperty: `${CUSTOM_URI}annotationProperty`,
  annotationValue: `${CUSTOM_URI}annotationValue`,
  annotationVarName: `${CUSTOM_URI}annotationVarName`,
  ask: `${CUSTOM_URI}ask`,
  class: `${CUSTOM_URI}class`,
  closed: `${CUSTOM_URI}closed`,
  condition: `${CUSTOM_URI}condition`,
  conforms: `${CUSTOM_URI}conforms`,
  construct: `${CUSTOM_URI}construct`,
  datatype: `${CUSTOM_URI}datatype`,
  deactivated: `${CUSTOM_URI}deactivated`,
  declare: `${CUSTOM_URI}declare`,
  defaultValue: `${CUSTOM_URI}defaultValue`,
  description: `${CUSTOM_URI}description`,
  detail: `${CUSTOM_URI}detail`,
  disjoint: `${CUSTOM_URI}disjoint`,
  entailment: `${CUSTOM_URI}entailment`,
  equals: `${CUSTOM_URI}equals`,
  expression: `${CUSTOM_URI}expression`,
  filterShape: `${CUSTOM_URI}filterShape`,
  flags: `${CUSTOM_URI}flags`,
  focusNode: `${CUSTOM_URI}focusNode`,
  group: `${CUSTOM_URI}group`,
  hasValue: `${CUSTOM_URI}hasValue`,
  ignoredProperties: `${CUSTOM_URI}ignoredProperties`,
  in: `${CUSTOM_URI}in`,
  intersection: `${CUSTOM_URI}intersection`,
  inversePath: `${CUSTOM_URI}inversePath`,
  js: `${CUSTOM_URI}js`,
  jsFunctionName: `${CUSTOM_URI}jsFunctionName`,
  jsLibrary: `${CUSTOM_URI}jsLibrary`,
  jsLibraryURL: `${CUSTOM_URI}jsLibraryURL`,
  labelTemplate: `${CUSTOM_URI}labelTemplate`,
  languageIn: `${CUSTOM_URI}languageIn`,
  lessThan: `${CUSTOM_URI}lessThan`,
  lessThanOrEquals: `${CUSTOM_URI}lessThanOrEquals`,
  maxCount: `${CUSTOM_URI}maxCount`,
  maxExclusive: `${CUSTOM_URI}maxExclusive`,
  maxInclusive: `${CUSTOM_URI}maxInclusive`,
  maxLength: `${CUSTOM_URI}maxLength`,
  message: `${CUSTOM_URI}message`,
  minCount: `${CUSTOM_URI}minCount`,
  minExclusive: `${CUSTOM_URI}minExclusive`,
  minInclusive: `${CUSTOM_URI}minInclusive`,
  minLength: `${CUSTOM_URI}minLength`,
  name: `${CUSTOM_URI}name`,
  namespace: `${CUSTOM_URI}namespace`,
  node: `${CUSTOM_URI}node`,
  nodeKind: `${CUSTOM_URI}nodeKind`,
  nodeValidator: `${CUSTOM_URI}nodeValidator`,
  nodes: `${CUSTOM_URI}nodes`,
  not: `${CUSTOM_URI}not`,
  object: `${CUSTOM_URI}object`,
  oneOrMorePath: `${CUSTOM_URI}oneOrMorePath`,
  optional: `${CUSTOM_URI}optional`,
  or: `${CUSTOM_URI}or`,
  order: `${CUSTOM_URI}order`,
  parameter: `${CUSTOM_URI}parameter`,
  path: `${CUSTOM_URI}path`,
  pattern: `${CUSTOM_URI}pattern`,
  predicate: `${CUSTOM_URI}predicate`,
  prefix: `${CUSTOM_URI}prefix`,
  prefixes: `${CUSTOM_URI}prefixes`,
  property: `${CUSTOM_URI}property`,
  propertyValidator: `${CUSTOM_URI}propertyValidator`,
  qualifiedMaxCount: `${CUSTOM_URI}qualifiedMaxCount`,
  qualifiedMinCount: `${CUSTOM_URI}qualifiedMinCount`,
  qualifiedValueShape: `${CUSTOM_URI}qualifiedValueShape`,
  qualifiedValueShapesDisjoint: `${CUSTOM_URI}qualifiedValueShapesDisjoint`,
  result: `${CUSTOM_URI}result`,
  resultAnnotation: `${CUSTOM_URI}resultAnnotation`,
  resultMessage: `${CUSTOM_URI}resultMessage`,
  resultPath: `${CUSTOM_URI}resultPath`,
  resultSeverity: `${CUSTOM_URI}resultSeverity`,
  returnType: `${CUSTOM_URI}returnType`,
  rule: `${CUSTOM_URI}rule`,
  select: `${CUSTOM_URI}select`,
  severity: `${CUSTOM_URI}severity`,
  shapesGraph: `${CUSTOM_URI}shapesGraph`,
  shapesGraphWellFormed: `${CUSTOM_URI}shapesGraphWellFormed`,
  sourceConstraint: `${CUSTOM_URI}sourceConstraint`,
  sourceConstraintComponent: `${CUSTOM_URI}sourceConstraintComponent`,
  sourceShape: `${CUSTOM_URI}sourceShape`,
  sparql: `${CUSTOM_URI}sparql`,
  subject: `${CUSTOM_URI}subject`,
  suggestedShapesGraph: `${CUSTOM_URI}suggestedShapesGraph`,
  target: `${CUSTOM_URI}target`,
  targetClass: `${CUSTOM_URI}targetClass`,
  targetNode: `${CUSTOM_URI}targetNode`,
  targetObjectsOf: `${CUSTOM_URI}targetObjectsOf`,
  targetSubjectsOf: `${CUSTOM_URI}targetSubjectsOf`,
  this: `${CUSTOM_URI}this`,
  union: `${CUSTOM_URI}union`,
  uniqueLang: `${CUSTOM_URI}uniqueLang`,
  update: `${CUSTOM_URI}update`,
  validator: `${CUSTOM_URI}validator`,
  value: `${CUSTOM_URI}value`,
  xone: `${CUSTOM_URI}xone`,
  zeroOrMorePath: `${CUSTOM_URI}zeroOrMorePath`,
  zeroOrOnePath: `${CUSTOM_URI}zeroOrOnePath`
};

export { TERM as default };
